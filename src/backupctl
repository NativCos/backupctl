#!/usr/bin/env bash
# Backup to a remote location using Borg.


# Configs
VERSION=13
source /etc/backupctl/conf
export BORG_RSH="ssh -i ${SSH_PATH_TO_KEY} -o ServerAliveInterval=10 -o ServerAliveCountMax=60"
export BORG_REPO=${SSH_PATH_TO_REPO}
export BORG_PASSPHRASE=${PASSPHRASE}


case $1 in
  "init")
    borg init --encryption=repokey ::
  ;;
  "create")
    # Backup system
    BACKUP_NAME=$(hostname -s)-$(date +"%H:%M:%S-%d-%b-%Y")
    borg create -v --stats --progress ::${BACKUP_NAME} / --exclude-from /etc/backupctl/excludefile --compression lz4
    exit 0
  ;;
  "extract")
    # Extract all system to target dir
    BACKUP_NAME=$2
    TO=$3

    if [ ! -d "$TO" ]; then echo "target dir dont exist"; exit 1; fi;
    cd ${TO}
    
    borg extract --progress ::${BACKUP_NAME}
    exit 0
  ;;
  "prune")
    # Prune extra backups Keep all backups in the last 7 days
    borg prune -v --stats --keep-within=7d --prefix $(hostname -s)- ${@:2}
    exit 0
  ;;
  "list")
    borg list ::
    exit 0
  ;;
  "info")
    borg info ::$2
    exit 0
  ;;
  "--version")
    echo $VERSION
  ;;
  "--help")
    echo "backupctl [ init | create | prune | list | info <NAME BACKUP> | extract <BACKUP_NAME> <TARGET_DIR>| --version | --help | _export_borg_variables ]"
    exit 0
  ;;
  "_export_borg_variables")
    cat <<EOF
export BORG_RSH="${BORG_RSH}"
export BORG_REPO=${BORG_REPO}
export BORG_PASSPHRASE=${BORG_PASSPHRASE}
EOF
    exit 0
  ;;
  *)
    echo "Unknown command..."
    exit 1
esac
